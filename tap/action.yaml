name: "Brew Tap Release"
description: "Brew Tap Release"

branding:
  icon: "activity"
  color: "orange"

inputs:
  commit_email:
    description: "Git author info used to commit to the homebrew tap."
    required: false

  commit_owner:
    description: "Git author info used to commit to the homebrew tap."
    required: false
    default: ${{ github.workflow }}

  debug:
    description: "Logs debugging info to console."
    required: false

  depends_on:
    description: "Custom dependencies in case other formulas are needed to build the current one (can be multiline)."
    required: false

  formula_folder:
    description: "The name of the folder in your homebrew tap where formula will be committed to."
    required: false
    default: "Formula"

  github_token:
    description: "The GitHub Token that has `repo` permissions for the homebrew tap you want to release to."
    required: false

  homebrew_owner:
    description: "The name of the homebrew tap owner to publish your formula to as it appears on GitHub."
    required: false
    default: ${{ github.actor }}

  homebrew_tap:
    description: "The name of the homebrew tap to publish your formula to as it appears on GitHub."
    required: false
    default: "dev"

  install:
    description: "Custom install command for your formula."
    required: false
    default: 'bin.install "#{name}"'

  skip_commit:
    description: "Skips committing the generated formula to a homebrew tap (useful for local testing)."
    required: false

  test:
    description: "Custom test command for your formula so you can run `brew test`."
    required: false
    default: 'system "test", "-x", "#{name}"'

  update_readme_table:
    description: "Update your homebrew tap's README with a table of all projects in the tap."
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        path: actions

    - name: "LICENSE"
      run: test -f actions/LICENSE
      shell: bash

    - id: ID
      uses: j5pu/actions/id@main

    - name: "Commit: email"
      run: |
        if [ "${{ inputs.commit_email }}" = "" ]; then 
          email=${{ steps.ID.outputs.ID }}+${{ github.workflow }}@users.noreply.github.com
        else 
          email=${{ inputs.commit_email }}
        fi
        echo "EMAIL=${email}" >> $GITHUB_ENV
      shell: bash

    - name: "GitHub: token"
      run: echo "GITHUB_TOKEN=${{ inputs.github_token }}" >> $GITHUB_ENV
      shell: bash
      if: ${{ inputs.github_token }} != ''

    - run: echo ${{ env.EMAIL }}
      shell: bash

    - name: "Git: config"
      run: |
        git config --global user.email "${{ env.EMAIL }}"
        git config --global user.name "${{ inputs.commit_owner }}"
      shell: bash

    - uses: actions/checkout@v2
      with:
        path: formula_create
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
        fetch-depth: 0
        token: ${{ env.GITHUB_TOKEN }}

    - name: "Formula: create"
      run: |
        cd formula_create
        file=${{ inputs.formula_folder }}/${{ github.event.repository.name }}.rb
        if [ ! -f ${file} ]; then
          mkdir -p ${{ inputs.formula_folder }}
          touch ${file}
          git add ${file}
          git commit -a -m ${file}
          git push 
        fi
        
        if ! grep -q project_table_start README.md; then 
          {
            echo '![main](https://github.com/${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}/actions/workflows/main.yaml/badge.svg)'
            echo '<!-- project_table_start -->'
            echo '#'
            echo '<!-- project_table_end -->'
          } >> README.md
          git add README.md
          git commit -a -m README.md
          git push 
        fi
        cd -
      shell: bash

    - name: "Formula: release"
      uses: Justintime50/homebrew-releaser@v1
      with:
        homebrew_owner: ${{ inputs.homebrew_owner }}
        homebrew_tap: homebrew-${{ inputs.homebrew_tap }}
        formula_folder: ${{ inputs.formula_folder }}
        github_token: ${{ env.GITHUB_TOKEN }}
        commit_owner: ${{ inputs.commit_owner }}
        commit_email: ${{ env.EMAIL }}
        depends_on: ${{ inputs.depends_on }}
        install: ${{ inputs.install }}
        test: ${{ inputs.test }}
        skip_commit: ${{ inputs.skip_commit }}
        update_readme_table: ${{ inputs.update_readme_table }}
        debug: ${{ inputs.debug }}

    - uses: actions/checkout@v2
      with:
        path: brewfile_workflows
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
        fetch-depth: 0
        token: ${{ env.GITHUB_TOKEN }}

    - name: "Formula: Brewfile"
      run: |
        cd brewfile_workflows
        echo 'tap "${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}"' > Brewfile
        
        while read -r formula; do
          echo "brew \"${formula}\"" >> Brewfile
        done < <(find Formula -type f -name "*.rb" -exec basename {} .rb \;)
        git add Brewfile
        git commit -a -m "Brewfile"
        git push
        cd -
      shell: bash

    - name: "Bundle: workflow"
      run: |
        cd brewfile_workflows
        file=.github/workflows/main.yaml

        if [ ! -f ${file} ]; then
          mkdir -p .github/workflows
          cat > ${file} <<EOF
        name: main
        
        on: 
          push:
            tags:
              - '**'
          workflow_dispatch:
        
        jobs:
          main:
            runs-on: macos-latest
            steps:
              - uses: actions/checkout@v2
                with:
                  fetch-depth: 0
              - name: Set up Homebrew
                uses: Homebrew/actions/setup-homebrew@master
              - name: Uninstall bats
                run: brew uninstall bats
              - name: "Bundle: install"
                run: brew bundle --quiet --no-lock
        EOF
          git add ${file}
          git commit -a -m "workflow: main"
          git push 
        fi
        cd -
      shell: bash

    - name: "Formula: workflow"
      run: |
        cd brewfile_workflows
        file=.github/workflows/${{ github.event.repository.name }}.yaml

        if [ ! -f ${file} ]; then
          mkdir -p .github/workflows
          cat > ${file} <<EOF
        name: ${{ github.event.repository.name }}
        
        on: 
          push:
            tags:
              - '**'
          workflow_dispatch:
        
        jobs:
          ${{ github.event.repository.name }}:
            runs-on: macos-latest
            steps:
              - uses: actions/checkout@v2
                with:
                  fetch-depth: 0
              - name: Set up Homebrew
                uses: Homebrew/actions/setup-homebrew@master
              - name: Uninstall bats
                run: brew uninstall bats
              - name: "${{ github.event.repository.name }}: audit"
                run: sh -c 'brew audit --new --git --formula Formula/${{ github.event.repository.name }}.rb || true'
              - name: "${{ github.event.repository.name }}: tap"
                run: brew tap ${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}
              - name: "${{ github.event.repository.name }}: install"
                run: |
                  brew install \
                    ${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}/${{ github.event.repository.name }}
              - name: "${{ github.event.repository.name }}: test"
                run: |
                  brew test \
                    ${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}/${{ github.event.repository.name }}
        EOF
          git add ${file}
          git commit -a -m "feat: ${{ github.event.repository.name }}"
          git push 
        fi
        cd -
      shell: bash

    - name: "Formula: tag"
      uses: j5pu/actions/tag@main
      with:
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
