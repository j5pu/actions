name: "Brew Tap Release"
description: "Brew Tap Release"

branding:
  icon: "activity"
  color: "orange"

inputs:
  commit_email:
    description: "Git author info used to commit to the homebrew tap."
    required: false

  commit_owner:
    description: "Git author info used to commit to the homebrew tap."
    required: false
    default: ${{ github.workflow }}

  debug:
    description: "Logs debugging info to console."
    required: false

  depends_on:
    description: "Custom dependencies in case other formulas are needed to build the current one (can be multiline)."
    required: false

  formula_folder:
    description: "The name of the folder in your homebrew tap where formula will be committed to."
    required: false
    default: "Formula"

  github_token:
    description: "The GitHub Token that has `repo` permissions for the homebrew tap you want to release to."
    required: false

  homebrew_owner:
    description: "The name of the homebrew tap owner to publish your formula to as it appears on GitHub."
    required: false
    default: ${{ github.actor }}

  homebrew_tap:
    description: "The name of the homebrew tap to publish your formula to as it appears on GitHub."
    required: false
    default: "dev"

  install:
    description: "Custom install command for your formula."
    required: false
    default: 'bin.install name.to_s'

  skip_commit:
    description: "Skips committing the generated formula to a homebrew tap (useful for local testing)."
    required: false

  test:
    description: "Custom test command for your formula so you can run `brew test`."
    required: false
    default: 'system "command", "-v", name.to_s'

  update_readme_table:
    description: "Update your homebrew tap's README with a table of all projects in the tap."
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: "GitHub: token"
      run: echo "GITHUB_TOKEN=${{ inputs.github_token }}" >> $GITHUB_ENV
      shell: bash
      if: ${{ inputs.github_token }} != ''

    - uses: actions/checkout@v2
      with:
        path: actions
        token: ${{ env.GITHUB_TOKEN }}

    - name: "LICENSE"
      run: test -f actions/LICENSE
      shell: bash

    - run: rm -rf $GITHUB_WORKSPACE/*
      shell: bash

    - id: ID
      uses: j5pu/actions/id@main

    - name: "Commit: email"
      run: |
        if [ "${{ inputs.commit_email }}" = "" ]; then 
          email=${{ steps.ID.outputs.ID }}+${{ github.workflow }}@users.noreply.github.com
        else 
          email=${{ inputs.commit_email }}
        fi
        echo "EMAIL=${email}" >> $GITHUB_ENV
      shell: bash

    - name: "Git: config"
      run: |
        git config --global user.email "${{ env.EMAIL }}"
        git config --global user.name "${{ inputs.commit_owner }}"
      shell: bash

    - uses: actions/checkout@v2
      with:
        path: start
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
        fetch-depth: 0
        token: ${{ env.GITHUB_TOKEN }}

    - name: ".gitignore: create"
      run: |
        cd start

        cat > /tmp/file <<EOF
        ### macOS template
        .DS_Store
        .AppleDouble
        .LSOverride
        Icon
        ._*
        .DocumentRevisions-V100
        .fseventsd
        .Spotlight-V100
        .TemporaryItems
        .Trashes
        .VolumeIcon.icns
        .com.apple.timemachine.donotpresent
        .AppleDB
        .AppleDesktop
        Network Trash Folder
        Temporary Items
        .apdisk
        
        ### Linux template
        .fuse_hidden*
        .directory
        .Trash-*
        .nfs*
        
        ### Backup template
        *.bak
        *.gho
        *.ori
        *.orig
        *.tmp
        
        ### JetBrains template
        .idea/**/workspace.xml
        .idea/**/tasks.xml
        .idea/**/usage.statistics.xml
        .idea/**/dictionaries
        .idea/**/shelf
        .idea/**/contentModel.xml
        .idea/**/dataSources/
        .idea/**/dataSources.ids
        .idea/**/dataSources.local.xml
        .idea/**/sqlDataSources.xml
        .idea/**/dynamic.xml
        .idea/**/uiDesigner.xml
        .idea/**/dbnavigator.xml
        .idea/**/gradle.xml
        .idea/**/libraries
        cmake-build-*/
        .idea/**/mongoSettings.xml
        *.iws
        out/
        .idea_modules/
        atlassian-ide-plugin.xml
        .idea/replstate.xml
        com_crashlytics_export_strings.xml
        crashlytics.properties
        crashlytics-build.properties
        fabric.properties
        .idea/httpRequests
        .idea/caches/build_file_checksums.ser

        EOF
        
        if ! cmp --quiet /tmp/file .gitignore; then
          echo "CHANGED=1" >> $GITHUB_ENV
          mv /tmp/file .gitignore
          git add .gitignore
          git commit -a -m .gitignore
          git push 
        fi
        
        cd -
      shell: bash

    - name: "README.md?"
      run: |
        cd start
        if test -f README.md; then
          echo "README=1" >> $GITHUB_ENV
        else 
          echo "README=0" >> $GITHUB_ENV
        fi
      shell: bash

    - name: "Repository: description"
      id: DESCRIPTION
      uses: j5pu/actions/description@main
      with:
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
      if: ${{ env.README == '0' }}

    - name: "README.md: create"
      run: |
        cd start
        
        if [ ! -f README.md ]; then
          url=${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}/actions/workflows/main.yaml/badge.svg
          {
            echo '# homebrew-${{ inputs.homebrew_tap }}'
            echo
            printf '%s' '![main](https://github.com/' "${url}" ')'
            echo
            echo
            echo "${{ steps.DESCRIPTION.outputs.DESCRIPTION }}."
            echo
          } > README.md
        
          echo "CHANGED=1" >> $GITHUB_ENV

          git add README.md
          git commit -a -m README.md
          git push 
        fi
        
        cd -
      shell: bash
      if: ${{ env.README == '0' }}

    - name: "README.md: update"
      run: |
        cd start
        
        if ! grep -q project_table_start README.md; then 
          {
            echo '## Formulas'
            echo '<!-- project_table_start -->'
            echo '#'
            echo '<!-- project_table_end -->'
            echo
          } >> README.md
        
          echo "CHANGED=1" >> $GITHUB_ENV

          git commit -a -m "README.md: template"
          git push 
        fi
        
        cd -
      shell: bash

    - name: "Formula: create"
      run: |
        cd start
        
        file=${{ inputs.formula_folder }}/${{ github.event.repository.name }}.rb
        
        if [ ! -f ${file} ]; then
          echo "CHANGED=1" >> $GITHUB_ENV
          mkdir -p ${{ inputs.formula_folder }}
          touch ${file}
          git add ${file}
          git commit -a -m ${file}
          git push 
        fi
        
        cd -
      shell: bash

    - run: rm -rf $GITHUB_WORKSPACE/*
      shell: bash

    - name: "Formula: release"
      uses: Justintime50/homebrew-releaser@v1
      with:
        homebrew_owner: ${{ inputs.homebrew_owner }}
        homebrew_tap: homebrew-${{ inputs.homebrew_tap }}
        formula_folder: ${{ inputs.formula_folder }}
        github_token: ${{ env.GITHUB_TOKEN }}
        commit_owner: ${{ inputs.commit_owner }}
        commit_email: ${{ env.EMAIL }}
        depends_on: ${{ inputs.depends_on }}
        install: ${{ inputs.install }}
        test: ${{ inputs.test }}
        skip_commit: ${{ inputs.skip_commit }}
        update_readme_table: ${{ inputs.update_readme_table }}
        debug: ${{ inputs.debug }}

    - run: sudo rm -rf $GITHUB_WORKSPACE/*
      shell: bash

    - uses: actions/checkout@v2
      with:
        path: end
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
        fetch-depth: 0
        token: ${{ env.GITHUB_TOKEN }}

    - name: "Formula: Brewfile"
      run: |
        cd end

        echo 'tap "${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}"' > /tmp/Brewfile
        
        while read -r formula; do
          echo "brew \"${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}/${formula}\"" >> /tmp/Formulas
        done < <(find Formula -type f -name "*.rb" -exec basename {} .rb \; | sort)
        cat /tmp/Formulas >> /tmp/Brewfile
        
        echo >> /tmp/Brewfile
        
        if ! cmp --quiet /tmp/Brewfile Brewfile; then
          echo "CHANGED=1" >> $GITHUB_ENV
          mv /tmp/Brewfile Brewfile
        fi
        
        cd -
      shell: bash

    - name: "Workflow: codeql"
      run: |
        cd end
        mkdir -p .github/workflows
     
        file=.github/workflows/codeql-analysis.yaml

        cat > /tmp/file <<'EOF'
        name: "CodeQL"

        on:
          push:
            tags:
              - '**'
          schedule:
            - cron: '32 4 * * 3'
        
        jobs:
          analyze:
            name: Analyze
            runs-on: ubuntu-latest
            permissions:
              actions: read
              contents: read
              security-events: write
        
            strategy:
              fail-fast: false
              matrix:
                language: [ 'ruby' ]
        
            steps:
            - name: Checkout repository
              uses: actions/checkout@v2
        
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v1
              with:
                languages: ${{ matrix.language }}
            - name: Autobuild
              uses: github/codeql-action/autobuild@v1
        
            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v1

        EOF
 
        if ! cmp --quiet /tmp/file ${file}; then
          echo "CHANGED=1" >> $GITHUB_ENV
          mv /tmp/file ${file}
        fi
        
        cd -
      shell: bash

    - name: "Bundle: workflow"
      run: |
        cd end
        mkdir -p .github/workflows
     
        file=.github/workflows/main.yaml

        cat > /tmp/file <<'EOF'
        name: main
        
        on: 
          push:
            tags:
              - '**'
          workflow_dispatch:
        
        jobs:
          main:
            runs-on: ${{ matrix.os }}
            strategy: 
              matrix:
                os: [macos-latest, ubuntu-latest]
            steps:
              - uses: actions/checkout@v2
                with:
                  fetch-depth: 0
              - name: Set up Homebrew
                uses: Homebrew/actions/setup-homebrew@master
              - name: "Bundle: install"
                run: brew bundle --quiet --no-lock
        
        EOF
 
        if ! cmp --quiet /tmp/file ${file}; then
          echo "CHANGED=1" >> $GITHUB_ENV
          mv /tmp/file ${file}
        fi
        
        cd -
      shell: bash

    - name: "Formula: workflow"
      run: |
        cd end
        mkdir -p .github/workflows
        
        file=.github/workflows/${{ github.event.repository.name }}.yaml
        
        matrix='${{ matrix.os }}'
        cat > /tmp/file <<EOF
        name: ${{ github.event.repository.name }}
        
        on: 
          push:
            tags:
              - '**'
          workflow_dispatch:
        
        jobs:
          ${{ github.event.repository.name }}:
            runs-on: "$matrix"
            strategy: 
              matrix:
                os: [macos-latest, ubuntu-latest]
            steps:
              - uses: actions/checkout@v2
                with:
                  fetch-depth: 0
              - name: Set up Homebrew
                uses: Homebrew/actions/setup-homebrew@master
              - name: "${{ github.event.repository.name }}: audit"
                run: sh -c 'brew audit --new --git --formula Formula/${{ github.event.repository.name }}.rb || true'
              - name: "${{ github.event.repository.name }}: tap"
                run: brew tap ${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}
              - name: "${{ github.event.repository.name }}: install"
                run: |
                  brew install ${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}/${{github.event.repository.name}}
                env:
                  HOMEBREW_NO_ENV_HINTS: 1
              - name: "${{ github.event.repository.name }}: test"
                run: |
                  brew test ${{ inputs.homebrew_owner }}/${{ inputs.homebrew_tap }}/${{ github.event.repository.name }}
        
        EOF
        
        msg=fix
        [ -f ${file} ] || echo "MSG=feat" >> $GITHUB_ENV
        
        if ! cmp --quiet /tmp/file ${file}; then
          echo "CHANGED=1" >> $GITHUB_ENV
          mv /tmp/file ${file}
        fi
        
        cd -
      shell: bash
    
    - name: "Commit and push if changes"
      run: |
        cd end

        if [ "${CHANGED-}" = '1' ]; then
          git add .
          git commit -a -m "${MSG:-fix}: ${{ github.event.repository.name }}"
          git push
        fi
      shell: bash
      
    - run: rm -rf $GITHUB_WORKSPACE/*
      shell: bash

    - name: "Formula: tag"
      uses: j5pu/actions/tag@main
      with:
        repository: ${{ inputs.homebrew_owner }}/homebrew-${{ inputs.homebrew_tap }}
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
