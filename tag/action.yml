name: 'Tag with svu next'
description: 'Tag with svu next'

inputs:
  strip:
    description: 'Strip prefix'
    required: false
    default: 'true'

  release:
    description: 'Create a default release'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: toggle workflow command echoing
      run: echo '::echo::on'
      shell: bash

    - name: Install svu ubuntu
      run: |
        echo 'deb [trusted=yes] https://apt.fury.io/caarlos0/ /' | \
          sudo tee /etc/apt/sources.list.d/caarlos0.list >/dev/null
        sudo apt update -qq >/dev/null
        sudo apt install -qq svu >/dev/null
      if: runner.os == 'Linux'
      shell: bash

    - name: Install svu macOS
      run: |
        brew update --quiet >/dev/null
        brew install --quiet caarlos0/tap/svu >/dev/null
      if: runner.os == 'macOS'
      shell: bash

    - name: Svu version output
      run: svu --version > /dev/null
      shell: bash

    - name: Strip prefix
      id: strip
      run: echo "::set-output name=prefix::--strip-prefix"
      shell: bash
      if: inputs.strip == 'true'

    - name: Current version
      id: current
      run: echo "::set-output name=version::$(svu ${{ steps.strip.outputs.prefix }} current)"
      shell: bash

    - name: Next version
      id: next
      run: echo "::set-output name=version::$(svu ${{ steps.strip.outputs.prefix }} next)"
      shell: bash

    - name: Versions different, tag
      run: |
        echo "Tag: ${{ steps.current.outputs.version }} => ${{ steps.next.outputs.version }}"
        git tag ${{ steps.next.outputs.version }}
        git push origin ${{ steps.next.outputs.version }}
        echo git tag ${{ steps.next.outputs.version }}
      if: steps.current.outputs.version != steps.next.outputs.version
      shell: bash

    - name: Versions equal, skipping
      run: |
        echo "Nothing to do: ${{ steps.current.outputs.version }} => ${{ steps.next.outputs.version }}"
      if: steps.current.outputs.version == steps.next.outputs.version
      shell: bash

    - name: Create release
      id: create
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.next.outputs.version }}
      if: inputs.release == 'true' && steps.current.outputs.version != steps.next.outputs.version

    - name: Delete older versions
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ github.token }}
      if: inputs.release == 'true' && steps.current.outputs.version != steps.next.outputs.version
