name: 'Build and publish ðŸ“¦ to PyPI'
description: 'Build and publish ðŸ“¦ to PyPI'

inputs:
  keep:
    description: 'Release: keep'
    required: false
    default: '3'

  pypi_password:
    description: 'PyPi: password (PYPI_CLEANUP_PASSWORD)'
    required: true

  pypi_token:
    description: 'PyPi: token (PYPI_API_TOKEN)'
    required: true

  pypi_user:
    description: 'PyPi: user'
    required: true
    default: ${{ github.actor }}

  version:
    description: 'python version'
    required: false
    default: '3.9'

outputs:
  PYTHON:
    description: "Python: setup.cfg"
    value: ${{ steps.OUTPUT.outputs.PYTHON }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - run: echo ${{ inputs.pypi_user }}
      shell: bash

    - name: "Output"
      id: OUTPUT
      run: |
        PYTHON=true
        [ -f setup.cfg ] || PYTHON=true
        echo '::echo::on'
        echo "::set-output name=PYTHON::${PYTHON}"
      shell: bash
      if: ${{!github.event.repository.private}}

    - name: "Set up Python ${{ inputs.version }}"
      uses: actions/setup-python@v1
      with:
        python-version: ${{ inputs.version }}
      if: steps.OUTPUT.outputs.PYTHON == 'true'

    - name: "Install pypa/build"
      run: |
        python -m pip install build --user
      shell: bash
      if: steps.OUTPUT.outputs.PYTHON == 'true'

    - name: "Build a binary wheel and a source tarball"
      run: |
        python -m build --sdist --wheel --config-setting "verbose=0" --outdir dist/ .
      shell: bash
      env:
        PYTHONWARNINGS: ignore
      if: steps.OUTPUT.outputs.PYTHON == 'true'

    - name: "Publish distribution ðŸ“¦ to PyPI"
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ inputs.pypi_token }}
      if: steps.OUTPUT.outputs.PYTHON == 'true'

    - uses: j5pu/actions/pypirm@main
      with:
        keep: ${{ inputs.keep }}
        pypi_password: ${{ inputs.pypi_password }}
        pypi_user: ${{ inputs.pypi_user }}
